openapi: 3.0.0
info:
  title: E-Commerce API
  description: A sample API
  version: 1.0.0
servers:
  - url: http://localhost/
    description: Local development server
paths:
  /api/register:
    post:
      summary: Register a new user
      description: Register a new user with name, email and password
      operationId: register
      tags:
        - User
      requestBody:
        description: User object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLogin"
  /api/login:
    post:
      summary: Login as an existing user
      description: Login as an existing user with email and password
      operationId: login
      tags:
        - User
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLogin"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /api/logout:
    delete:
      security:
        - bearerAuth: [token]
      summary: Logout the current user
      description: Logout the current authenticated user
      operationId: logout
      tags:
        - User
      responses:
        "200":
          description: User logged out successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /api/products:
    get:
      summary: List all products
      description: Get a list of all products
      operationId: listProducts
      tags:
        - Product
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductList"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
    post:
      summary: Create a new product
      description: Create a new product
      operationId: createProduct
      tags:
        - Product
      security:
        - bearerAuth: []
      requestBody:
        description: Product object
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                detail:
                  type: string
                category_id:
                  type: integer
              required:
                - name
                - detail
      responses:
        "200":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductList"
        "401":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"

  /api/products/{id}:
    get:
      summary: Get a product
      description: Get a product by ID
      operationId: getProductById
      tags:
        - Product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the product to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: A product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductList"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  message:
                    type: string
                    default: Product not found

    put:
      summary: Update a product
      description: Update a product by ID
      operationId: updateProductById
      tags:
        - Product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Product object
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                detail:
                  type: string
                category_id:
                  type: integer
              required:
                - name
                - detail
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductList"
        "400":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
    delete:
      summary: Delete a product
      description: Delete a product by ID
      operationId: deleteProductById
      tags:
        - Product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Product deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessage"
        "400":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"

components:
  schemas:
    UserRegister:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        c_password:
          type: string
      required:
        - name
        - email
        - password
        - c_password
    UserLogin:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            token:
              type: string
            name:
              type: string
        message:
          type: string
      required:
        - token
        - name
    ErrorMessage:
      type: object
      properties:
        success:
          type: boolean
          default: false
        message:
          type: string
        data:
          type: object
          properties:
            error:
              type: string
    SuccessMessage:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          default: null
        message:
          type: string

    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        detail:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - detail

    ProductList:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: "#/components/schemas/Product"
        message:
          type: string

    Unauthenticated:
      type: object
      properties:
        message:
          type: string
          default: Unauthenticated.

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
